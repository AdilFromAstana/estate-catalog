import React, { useState, useCallback } from "react";
import { useNavigate } from "react-router-dom";
import toast from "react-hot-toast";
import { SelectionsTable } from "../components/PropertyTable/SelectionsTable";
import { useSelections } from "../hooks/useSelection";

const AdminSelectionsPage: React.FC = () => {
  const navigate = useNavigate();

  const [currentPage, setCurrentPage] = useState(1);
  const [filters, setFilters] = useState<{
    isShared?: boolean;
  }>({});

  const itemsPerPage = 10;

  // ‚úÖ –ø–æ–ª—É—á–∞–µ–º –ø–æ–¥–±–æ—Ä–∫–∏ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ (–∏–ª–∏ –≤—Å–µ, –µ—Å–ª–∏ –∞–¥–º–∏–Ω)
  const { data: selectionsData, isLoading } = useSelections({
    page: currentPage,
    limit: itemsPerPage,
    isShared: filters.isShared,
  });

  const total = selectionsData?.total ?? 0;

  const handleEdit = useCallback(
    (id: number) => navigate(`/edit-selection/${id}`),
    [navigate]
  );

  const handleDelete = useCallback((id: number) => {
    toast.success(`–ü–æ–¥–±–æ—Ä–∫–∞ ID ${id} —É–¥–∞–ª–µ–Ω–∞ (–¥–µ–º–æ-—Ä–µ–∂–∏–º)`);
  }, []);

  const handleShare = useCallback((selection: any) => {
    const newShared = !selection.isShared;
    toast.success(
      `–ü–æ–¥–±–æ—Ä–∫–∞ "${selection.name}" —Ç–µ–ø–µ—Ä—å ${
        newShared ? "–æ–±—â–∞—è" : "–ª–∏—á–Ω–∞—è"
      } (–¥–µ–º–æ-—Ä–µ–∂–∏–º)`
    );
  }, []);

  if (isLoading) {
    return (
      <div className="p-6 text-gray-600 flex items-center justify-center">
        –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–±–æ—Ä–æ–∫...
      </div>
    );
  }

  return (
    <div className="w-full mx-auto px-0 bg-gray-50">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex justify-between items-center mb-8">
        <h1 className="text-2xl sm:text-3xl font-bold text-gray-900">
          –ü–æ–¥–±–æ—Ä–∫–∏ ({selectionsData?.data.length ?? 0} –∏–∑ {total})
        </h1>
      </div>

      {/* –¢–∞–±–ª–∏—Ü–∞ */}
      <SelectionsTable
        selections={selectionsData?.data || []}
        onEdit={handleEdit}
        onDelete={handleDelete}
        onShare={handleShare}
        visibleFilters={true}
        visibleActions={true}
        visiblePagination={true}
        // üîπ —Ñ–∏–ª—å—Ç—Ä: –æ–±—â–∏–µ / –ª–∏—á–Ω—ã–µ
        filters={
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –¢–∏–ø –ø–æ–¥–±–æ—Ä–∫–∏
              </label>
              <select
                value={
                  filters.isShared === undefined
                    ? ""
                    : filters.isShared
                    ? "shared"
                    : "private"
                }
                onChange={(e) => {
                  const value = e.target.value;
                  setFilters({
                    isShared:
                      value === ""
                        ? undefined
                        : value === "shared"
                        ? true
                        : false,
                  });
                }}
                className="w-full px-3 py-2 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 outline-none transition"
              >
                <option value="">–í—Å–µ</option>
                <option value="shared">–û–±—â–∏–µ</option>
                <option value="private">–õ–∏—á–Ω—ã–µ</option>
              </select>
            </div>
          </div>
        }
        // üîπ –ø–∞–≥–∏–Ω–∞—Ü–∏—è
        currentPage={currentPage}
        total={total}
        pageSize={itemsPerPage}
        onPageChange={setCurrentPage}
      />
    </div>
  );
};

export default AdminSelectionsPage;

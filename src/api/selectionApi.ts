import type { Selection, SelectionResponse } from "../types";
import axiosInstance from "./axiosInstance";

export const selectionApi = {
  // ‚ûï —Å–æ–∑–¥–∞—Ç—å –ø–æ–¥–±–æ—Ä–∫—É
  createSelection: async (dto: any): Promise<any> => {
    const res = await axiosInstance.post("/selections", dto);
    return res.data;
  },

  // ‚úèÔ∏è –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–±–æ—Ä–∫—É
  updateSelection: async (id: number, dto: any): Promise<any> => {
    const res = await axiosInstance.put(`/selections/${id}`, dto);
    return res.data;
  },

  // üîç –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É –ø–æ–¥–±–æ—Ä–∫—É –ø–æ ID
  getSelectionById: async (id: number): Promise<SelectionResponse> => {
    const res = await axiosInstance.get(`/selections/${id}`);
    return res.data;
  },

  // üìÉ –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø–æ–¥–±–æ—Ä–∫–∏ (—Å–ø–∏—Å–æ–∫)
  getAllSelections: async (
    query?: string
  ): Promise<{
    data: Selection[];
    total: number;
    page: number;
    limit: number;
    totalPages: number;
  }> => {
    const res = await axiosInstance.get(`/selections?${query ?? ""}`);
    return res.data;
  },
};
